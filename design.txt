Jackie Xu, Yedoh Kang, Winnie Chen
Systems Period 4
Final Project


Project Idea:
We are a recreating the game, Battleship, using networking across two computers. Each player has 5 ships: a 5-square aircraft carrier, a 4-square battleship, a 3-square cruiser, a 3-square submarine, and a 2-square destroyer. When the game starts, players choose where they want to position their ships. The game will continue prompting the users to enter locations to send missiles, and will display updated boards with the proper miss/hit symbols. When a ship sinks, a message will display which one it is. The game ends when one person sinks all of the opponent’s ships, and proper ending screens will display.


User Interface:
Our game will be played in the shell. The home territory will be displayed on the left side, and the opponent’s territory will be displayed on the right. The grids will be 10x10; the columns will be labeled A-J, and the row labeled 0-9. For placing, player enters starting coordinate, type of ship (A, B, C, S, or D), and direction (L, R, U, D). If the ship goes off the screen, an error message will display. For hitting, player only enters a coordinate.

Symbols Used In Shell:
	Home:						Opponent:
	- empty slot: . (black)				- empty slot: . (black)
	- hit: H (red)					- hit: H (red)
	- miss: * (white)				- miss: * (white)
	- un-hit ship coordinate: first letter of ship name (A, B, C, S, or D) (green)


Technical Design:
We are using networking between two computers. We will use semaphores to control the files, and pipes to share them.

Role Assignment:
	Jackie:
	- display and front-end
	Yedoh:
	- memory storage
	Winnie:
	- 

Data Structures:
- struct: the coordinates of each ship (one struct per ship)
	- char * type, struct * coors
- struct: coordinates
	- int col, char row
- int **: grids
	- 
- file: 



